/*
 * This file is generated by jOOQ.
 */
package org.zhuyb.graphbatis.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.zhuyb.graphbatis.jooq.tables.TRoom;

import javax.annotation.Generated;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TRoomRecord extends UpdatableRecordImpl<TRoomRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -161376291;

    /**
     * Create a detached TRoomRecord
     */
    public TRoomRecord() {
        super(TRoom.T_ROOM);
    }

    /**
     * Create a detached, initialised TRoomRecord
     */
    public TRoomRecord(Integer roomId, String roomName) {
        super(TRoom.T_ROOM);

        set(0, roomId);
        set(1, roomName);
    }

    /**
     * Getter for <code>t_room.room_id</code>.
     */
    public Integer getRoomId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>t_room.room_id</code>.
     */
    public TRoomRecord setRoomId(Integer value) {
        set(0, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>t_room.room_name</code>.
     */
    @Size(max = 50)
    public String getRoomName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>t_room.room_name</code>.
     */
    public TRoomRecord setRoomName(String value) {
        set(1, value);
        return this;
    }

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TRoom.T_ROOM.ROOM_ID;
    }

    @Override
    public Field<String> field2() {
        return TRoom.T_ROOM.ROOM_NAME;
    }

    @Override
    public Integer component1() {
        return getRoomId();
    }

    @Override
    public String component2() {
        return getRoomName();
    }

    @Override
    public Integer value1() {
        return getRoomId();
    }

    @Override
    public String value2() {
        return getRoomName();
    }

    @Override
    public TRoomRecord value1(Integer value) {
        setRoomId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TRoomRecord value2(String value) {
        setRoomName(value);
        return this;
    }

    @Override
    public TRoomRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
