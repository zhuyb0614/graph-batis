/*
 * This file is generated by jOOQ.
 */
package org.zhuyb.graphbatis.jooq.tables.daos;


import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.zhuyb.graphbatis.jooq.tables.TTeacher;
import org.zhuyb.graphbatis.jooq.tables.records.TTeacherRecord;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class TTeacherDao extends DAOImpl<TTeacherRecord, org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher, Integer> {

    /**
     * Create a new TTeacherDao without any configuration
     */
    public TTeacherDao() {
        super(TTeacher.T_TEACHER, org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher.class);
    }

    /**
     * Create a new TTeacherDao with an attached configuration
     */
    @Autowired
    public TTeacherDao(Configuration configuration) {
        super(TTeacher.T_TEACHER, org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher.class, configuration);
    }

    @Override
    public Integer getId(org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher object) {
        return object.getTeacherId();
    }

    /**
     * Fetch records that have <code>teacher_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher> fetchRangeOfTeacherId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTeacher.T_TEACHER.TEACHER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>teacher_id IN (values)</code>
     */
    public List<org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher> fetchByTeacherId(Integer... values) {
        return fetch(TTeacher.T_TEACHER.TEACHER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>teacher_id = value</code>
     */
    public org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher fetchOneByTeacherId(Integer value) {
        return fetchOne(TTeacher.T_TEACHER.TEACHER_ID, value);
    }

    /**
     * Fetch records that have <code>teacher_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher> fetchRangeOfTeacherName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TTeacher.T_TEACHER.TEACHER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>teacher_name IN (values)</code>
     */
    public List<org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher> fetchByTeacherName(String... values) {
        return fetch(TTeacher.T_TEACHER.TEACHER_NAME, values);
    }

    /**
     * Fetch records that have <code>subject_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher> fetchRangeOfSubjectId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTeacher.T_TEACHER.SUBJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subject_id IN (values)</code>
     */
    public List<org.zhuyb.graphbatis.jooq.tables.pojos.TTeacher> fetchBySubjectId(Integer... values) {
        return fetch(TTeacher.T_TEACHER.SUBJECT_ID, values);
    }
}
